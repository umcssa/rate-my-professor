#!/bin/bash
# insta485db

# Stop on errors
set -e
# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create")
    if [ -f var/insta485.sqlite3 ]; then
        echo "Error: database already exists"
        exit 1
    fi
    set -x
    mkdir -p var/uploads
    echo "+ mkdir -p var/uploads"
    sqlite3 var/insta485.sqlite3 < sql/schema.sql
    echo "+ sqlite3 var/insta485.sqlite3 < sql/schema.sql"
    sqlite3 var/insta485.sqlite3 < sql/data.sql
    echo "+ sqlite3 var/insta485.sqlite3 < sql/data.sql"
    cp sql/uploads/* var/uploads/
    echo "+ cp sql/uploads/* var/uploads/"
    ;;

  "destroy")
    set -x
    rm -rf var/insta485.sqlite3 var/uploads
    echo "+ rm -rf var/insta485.sqlite3 var/uploads"
    ;;

  "reset")
    set -x
    rm -rf var/insta485.sqlite3 var/uploads
    echo "+ rm -rf var/insta485.sqlite3 var/uploads"
    mkdir -p var/uploads
    echo "+ mkdir -p var/uploads"
    sqlite3 var/insta485.sqlite3 < sql/schema.sql
    echo "+ sqlite3 var/insta485.sqlite3 < sql/schema.sql"
    sqlite3 var/insta485.sqlite3 < sql/data.sql
    echo "+ sqlite3 var/insta485.sqlite3 < sql/data.sql"
    cp sql/uploads/* var/uploads/
    echo "+ cp sql/uploads/* var/uploads/"
    ;;

  "dump")
    set -x
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM comments'
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM following'
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM likes'
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM posts'
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM users'
    ;;
  *)
    usage
    exit 1
    ;;
esac
